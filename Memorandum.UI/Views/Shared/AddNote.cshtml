@model Memorandum.UI.Models.Note.NoteResponse

@{
    ViewData["Title"] = "Add Note";
}

<div class="row">
    <div class="col-md-6 offset-md-3">
        <h1>Add Note</h1>
        <form asp-action="Add" autocomplete="off">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                <input asp-for="CategoryId" class="form-control" type="text"/>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>
            <div class="row mt-2">
                <div class="col-md-6">
                    <div class="form-group">
                        <a asp-action="AddNote"><input type="submit" value="Submit" class="btn btn-primary w-100" /></a>
                    </div>
                </div>
                <div class="col-md-6">
                    <a asp-action="Index" class="btn btn-secondary  w-100">View All</a>
                </div>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }